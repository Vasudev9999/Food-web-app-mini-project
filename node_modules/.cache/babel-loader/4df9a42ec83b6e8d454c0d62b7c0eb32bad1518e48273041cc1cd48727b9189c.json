{"ast":null,"code":"import React from 'react';\n// import Delete from '@material-ui/icons/Delete'\nimport { useCart, useDispatchCart } from '../components/ContexReducer';\n// import trash from \"../trash.svg\"\n// export default function Cart() {\n//   let data = useCart();\n//   let dispatch = useDispachCart();\n//   if (data.length === 0) {\n//     return (\n//       <div>\n//         <div className='m-5 w-100 text-center fs-3'>The Cart is Empty!</div>\n//       </div>\n//     )\n//   }\n// //   const handleCheckOut = async () => {\n// //     let userEmail = localStorage.getItem(\"userEmail\");\n// //     // console.log(data,localStorage.getItem(\"userEmail\"),new Date())\n// //     let response = await fetch(\"http://localhost:5000/api/auth/orderData\", {\n// //       // credentials: 'include',\n// //       // Origin:\"http://localhost:3000/login\",\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({\n// //         order_data: data,\n// //         email: userEmail,\n// //         order_date: new Date().toDateString()\n// //       })\n// //     });\n// //     console.log(\"JSON RESPONSE:::::\", response.status)\n// //     if (response.status === 200) {\n// //       dispatch({ type: \"DROP\" })\n// //     }\n// //   }\n\n//   let totalPrice = data.reduce((total, food) => total + food.price, 0)\n//   return (\n//   <div>\n//     <div className='container m-auto mt-5 table-responsive  table-responsive-sm table-responsive-md' >\n//       <table className='table table-hover '>\n//         <thead className=' text-success fs-4'>\n//           <tr>\n//             <th scope='col' >#</th>\n//             <th scope='col' >Name</th>\n//             <th scope='col' >Quantity</th>\n//             <th scope='col' >Option</th>\n//             <th scope='col' >Amount</th>\n//             <th scope='col' ></th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {data.map((food, index) => (\n//             <tr>\n//               <th scope='row' >{index + 1}</th>\n//               <td >{food.name}</td>\n//               <td>{food.qty}</td>\n//               <td>{food.size}</td>\n//               <td>{food.price}</td>\n//               <td ><button type=\"button\" className=\"btn p-0\"><Delete onClick={() => { dispatch({ type: \"REMOVE\", index: index }) }} /></button> </td></tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       <div><h1 className='fs-2'>Total Price: {totalPrice}/-</h1></div>\n//       <div>\n//         <button className='btn bg-success mt-5 '  > Check Out </button>\n//       </div>\n//     </div>\n//   </div>\n// )\n// }","map":{"version":3,"names":["React","useCart","useDispatchCart"],"sources":["C:/Users/pvasu/OneDrive/Desktop/miniproject/mernapp/src/screens/Cart.js"],"sourcesContent":["\r\nimport React from 'react'\r\n// import Delete from '@material-ui/icons/Delete'\r\nimport { useCart, useDispatchCart } from '../components/ContexReducer';\r\n// import trash from \"../trash.svg\"\r\n// export default function Cart() {\r\n//   let data = useCart();\r\n//   let dispatch = useDispachCart();\r\n//   if (data.length === 0) {\r\n//     return (\r\n//       <div>\r\n//         <div className='m-5 w-100 text-center fs-3'>The Cart is Empty!</div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// //   const handleCheckOut = async () => {\r\n// //     let userEmail = localStorage.getItem(\"userEmail\");\r\n// //     // console.log(data,localStorage.getItem(\"userEmail\"),new Date())\r\n// //     let response = await fetch(\"http://localhost:5000/api/auth/orderData\", {\r\n// //       // credentials: 'include',\r\n// //       // Origin:\"http://localhost:3000/login\",\r\n// //       method: 'POST',\r\n// //       headers: {\r\n// //         'Content-Type': 'application/json'\r\n// //       },\r\n// //       body: JSON.stringify({\r\n// //         order_data: data,\r\n// //         email: userEmail,\r\n// //         order_date: new Date().toDateString()\r\n// //       })\r\n// //     });\r\n// //     console.log(\"JSON RESPONSE:::::\", response.status)\r\n// //     if (response.status === 200) {\r\n// //       dispatch({ type: \"DROP\" })\r\n// //     }\r\n// //   }\r\n\r\n//   let totalPrice = data.reduce((total, food) => total + food.price, 0)\r\n//   return (\r\n//   <div>\r\n//     <div className='container m-auto mt-5 table-responsive  table-responsive-sm table-responsive-md' >\r\n//       <table className='table table-hover '>\r\n//         <thead className=' text-success fs-4'>\r\n//           <tr>\r\n//             <th scope='col' >#</th>\r\n//             <th scope='col' >Name</th>\r\n//             <th scope='col' >Quantity</th>\r\n//             <th scope='col' >Option</th>\r\n//             <th scope='col' >Amount</th>\r\n//             <th scope='col' ></th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {data.map((food, index) => (\r\n//             <tr>\r\n//               <th scope='row' >{index + 1}</th>\r\n//               <td >{food.name}</td>\r\n//               <td>{food.qty}</td>\r\n//               <td>{food.size}</td>\r\n//               <td>{food.price}</td>\r\n//               <td ><button type=\"button\" className=\"btn p-0\"><Delete onClick={() => { dispatch({ type: \"REMOVE\", index: index }) }} /></button> </td></tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       <div><h1 className='fs-2'>Total Price: {totalPrice}/-</h1></div>\r\n//       <div>\r\n//         <button className='btn bg-success mt-5 '  > Check Out </button>\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n// )\r\n// }"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,OAAO,EAAEC,eAAe,QAAQ,6BAA6B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}