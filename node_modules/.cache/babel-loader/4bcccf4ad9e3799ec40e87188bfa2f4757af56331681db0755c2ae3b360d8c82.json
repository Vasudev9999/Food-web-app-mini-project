{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pvasu\\\\OneDrive\\\\Desktop\\\\miniproject\\\\mernapp\\\\src\\\\screens\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [credentials, setcredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(JSON.stringify({\n      email: credentials.email,\n      password: credentials.password\n    }));\n    const response = await fetch(\"http://localhost:5000/api/creatuser\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: credentials.email,\n        password: credentials.password\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    if (!json.success) {\n      alert(\"Enter Valid Credentials\");\n    }\n  };\n  const onChange = event => {\n    setcredentials({\n      ...credentials,\n      [event.target.name]: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"azlU0qu8kX023qx0G1cP45E4Snk=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","credentials","setcredentials","email","password","handleSubmit","e","preventDefault","console","log","JSON","stringify","response","fetch","method","headers","body","json","success","alert","onChange","event","target","name","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pvasu/OneDrive/Desktop/miniproject/mernapp/src/screens/Login.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function Login() {\r\n  const [credentials, setcredentials] = useState({ email: \"\", password: \"\"})\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(JSON.stringify({ email: credentials.email,password: credentials.password}))\r\n    const response = await fetch(\"http://localhost:5000/api/creatuser\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({  email: credentials.email,password: credentials.password })\r\n    })\r\n    const json = await response.json()\r\n    console.log(json);\r\n\r\n    if (!json.success) {\r\n      alert(\"Enter Valid Credentials\")\r\n    }\r\n  }\r\n  const onChange = (event) => {\r\n    setcredentials({ ...credentials, [event.target.name]: event.target.value })\r\n  }\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAAEO,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;EAE1E,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK,EAAEF,WAAW,CAACE,KAAK;MAACC,QAAQ,EAAEH,WAAW,CAACG;IAAQ,CAAC,CAAC,CAAC;IACvF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEN,IAAI,CAACC,SAAS,CAAC;QAAGR,KAAK,EAAEF,WAAW,CAACE,KAAK;QAACC,QAAQ,EAAEH,WAAW,CAACG;MAAS,CAAC;IACnF,CAAC,CAAC;IACF,MAAMa,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;IAEjB,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;MACjBC,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EACD,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1BnB,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACoB,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC7E,CAAC;EACD,oBACE1B,OAAA;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAAC5B,EAAA,CA5BuBD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}